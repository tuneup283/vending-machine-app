テストケース 1: ちょうど支払う場合
入力:
商品価格: 150円
ユーザーの選択したお金: 100円硬貨1枚 + 50円硬貨1枚 = 合計150円
期待される結果:
お釣りなし
ユーザーの残りのお金が正しく減る
キャッシャーのお金に100円硬貨1枚と50円硬貨1枚が追加される
テストケース 2: 多く支払ってお釣りが出る場合（小額）
入力:
商品価格: 150円
ユーザーの選択したお金: 500円硬貨1枚 = 合計500円
期待される結果:
お釣り: 350円（500円 - 150円）
お釣りは100円硬貨3枚と50円硬貨1枚
キャッシャーに500円硬貨が1枚追加され、100円硬貨3枚と50円硬貨1枚が減少
ユーザーの残りのお金が正しく減る
テストケース 3: 多く支払ってお釣りが出る場合（複数の金額）
入力:
商品価格: 170円
ユーザーの選択したお金: 100円硬貨2枚 + 50円硬貨2枚 = 合計300円
期待される結果:
お釣り: 130円
お釣りは100円硬貨1枚と10円硬貨3枚
キャッシャーに100円硬貨2枚、50円硬貨2枚が追加され、100円硬貨1枚と10円硬貨3枚が減少
ユーザーの残りのお金が正しく減る
テストケース 4: 支払額が少ない場合
入力:
商品価格: 200円
ユーザーの選択したお金: 100円硬貨1枚 = 合計100円
期待される結果:
エラーメッセージ: 「Insufficient funds」
取引はロールバックされ、キャッシャーやユーザーの金額に変化なし
テストケース 5: キャッシャーにお釣りが不足している場合
入力:
商品価格: 190円
ユーザーの選択したお金: 500円硬貨1枚 = 合計500円
キャッシャーの状態: 100円硬貨が1枚しかない
期待される結果:
エラーメッセージ: 「Insufficient change in casher」
取引はロールバックされ、キャッシャーやユーザーの金額に変化なし
テストケース 6: 1円硬貨が複数含まれる場合
入力:
商品価格: 163円
ユーザーの選択したお金: 100円硬貨1枚 + 50円硬貨1枚 + 10円硬貨1枚 + 1円硬貨3枚 = 合計163円
期待される結果:
お釣りなし
キャッシャーに100円、50円、10円、1円が追加される
ユーザーの残りのお金が正しく減る
テストケース 7: キャッシャーがぴったりお釣りを返せる場合
入力:
商品価格: 175円
ユーザーの選択したお金: 500円硬貨1枚 = 合計500円
キャッシャーの状態: お釣りとして使える100円硬貨1枚、50円硬貨1枚、10円硬貨1枚、5円硬貨1枚がある
期待される結果:
お釣り: 325円
キャッシャーから100円、50円、10円、5円が正しく減少し、500円硬貨が追加される
テストケース 8: 全ての金種が均等に使われる場合
入力:
商品価格: 183円
ユーザーの選択したお金: 500円硬貨1枚 = 合計500円
期待される結果:
お釣り: 317円（100円硬貨3枚 + 10円硬貨1枚 + 5円硬貨1枚 + 1円硬貨2枚）
キャッシャーに500円が追加され、100円硬貨3枚、10円硬貨1枚、5円硬貨1枚、1円硬貨2枚が減少
テストケース 9: 釣り銭が全く不要な場合
入力:
商品価格: 1000円
ユーザーの選択したお金: 1000円紙幣1枚 = 合計1000円
期待される結果:
お釣りなし
キャッシャーに1000円紙幣が追加され、ユーザーの残りのお金が正しく減る
テストケース 10: 異常な金額（0円、負の値）
入力:
商品価格: 150円
ユーザーの選択したお金: 0円または負の値（例: -50円）
期待される結果:
エラーメッセージ: 「Invalid selectedMoney data」
取引は行われず、キャッシャーやユーザーの金額に変化なし
テストケース 11: 大額紙幣のみを使う場合
入力:
商品価格: 200円
ユーザーの選択したお金: 10000円紙幣1枚 = 合計10000円
期待される結果:
お釣り: 9800円
お釣りは5000円紙幣1枚、1000円紙幣4枚、500円硬貨1枚、100円硬貨3枚
キャッシャーに10000円紙幣が追加され、5000円紙幣、1000円紙幣、500円硬貨、100円硬貨が減少


